name: Deploy to Production

on:
  push:
    branches:
      - main  

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      
      - name: Checkout repository
        uses: actions/checkout@v3

      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      
      - name: Build & Push Backend-Node
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/backend-node:latest ./app/BackEnd
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/backend-node:latest

      
      - name: Build & Push Backend-Flask
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/backend-flask:latest ./app/BackEnd-Flask
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/backend-flask:latest

      
      - name: Build & Push Frontend
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest ./app/FrontEnd
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest

      
            
      - name: Set up Google Cloud authentication
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          install_components: 'beta'  # optional: if you need beta features

      # OPTIONAL: if you still want to SSH via gcloud
      - name: SSH to VM using gcloud and deploy
        run: |
          gcloud compute ssh ${{ secrets.GCP_USERNAME }}@${{ secrets.GCP_INSTANCE_NAME }} \
            --zone=${{ secrets.GCP_COMPUTE_ZONE }} --project=${{ secrets.GCP_PROJECT_ID }} \
            --command="cd ~/AIDE505-FinalProject/app && git pull origin main && docker-compose -f docker-compose.prod.yml up -d"


